name: Build OpenWrt and Release

on:
  workflow_dispatch:
    inputs:
      openwrt_ref:
        description: 'OpenWrt branch/tag/commit (e.g. openwrt-23.05, v23.05.3, af42c3b2)'
        required: false
        default: 'master'
      config_path:
        description: 'Path to .config file (default: .config in repo root)'
        required: false
        default: '.config'

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  CUSTOM_PACKAGES: https://github.com/harryzhaozy/luci-packages.git
  WORKDIR: openwrt
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  DL_DIR: ${{ github.workspace }}/.dl

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 360  # 最长运行时间 6 小时，可改短
    steps:
      - name: Checkout workflow repo
        uses: actions/checkout@v4

      # 恢复 ccache 缓存
      - name: Restore ccache cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ github.event.inputs.openwrt_ref }}-${{ runner.os }}
          restore-keys: |
            ccache-${{ github.event.inputs.openwrt_ref }}
            ccache-

      # 恢复 dl 缓存（源码包）
      - name: Restore dl cache
        uses: actions/cache@v4
        with:
          path: ${{ env.DL_DIR }}
          key: dl-${{ github.event.inputs.openwrt_ref }}-${{ runner.os }}
          restore-keys: |
            dl-${{ github.event.inputs.openwrt_ref }}
            dl-

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
            gcc git java-propose-classpath libelf-dev libncurses5-dev libncursesw5-dev \
            libssl-dev python3 python3-pip python3-setuptools rsync subversion \
            swig unzip wget zlib1g-dev

      - name: Get OpenWrt source
        run: |
          git clone $OPENWRT_REPO $WORKDIR
          cd $WORKDIR
          ref="${{ github.event.inputs.openwrt_ref }}"
          if git rev-parse --verify --quiet "$ref" >/dev/null; then
            git checkout "$ref"
          elif git ls-remote --exit-code --heads origin "$ref" >/dev/null 2>&1; then
            git checkout -B "$ref" origin/"$ref"
          elif git ls-remote --exit-code --tags origin "$ref" >/dev/null 2>&1; then
            git checkout "tags/$ref"
          fi

      - name: Add custom packages
        working-directory: ${{ env.WORKDIR }}/package
        run: git clone $CUSTOM_PACKAGES

      - name: Copy Config
        working-directory: ${{ env.WORKDIR }}
        run: |
          cfg_path="${{ github.workspace }}/${{ github.event.inputs.config_path || '.config' }}"
          if [ -f "$cfg_path" ]; then
            cp "$cfg_path" .config
            make defconfig
          fi

      - name: Modify default settings
        working-directory: ${{ env.WORKDIR }}
        run: |
          ls -l package/base-files/files/bin/
          sed -i 's/192\.168\.1\.1/192.168.1.10/g' package/base-files/files/bin/config_generate
          sed -i 's/UTC/CST-8/g' package/base-files/files/bin/config_generate
          echo "set system.@system[-1].zonename='Asia/Shanghai'" >> package/base-files/files/etc/config/system

      - name: Set cache dirs
        working-directory: ${{ env.WORKDIR }}
        run: |
          echo "CONFIG_DEVEL=y" >> .config
          echo "CONFIG_CCACHE=y" >> .config
          echo "dl_dir:=${{ env.DL_DIR }}" >> feeds.conf
          mkdir -p ${{ env.CCACHE_DIR }} ${{ env.DL_DIR }}
          make defconfig

      - name: Download package sources
        working-directory: ${{ env.WORKDIR }}
        run: make download -j$(nproc)

      - name: Build OpenWrt
        working-directory: ${{ env.WORKDIR }}
        run: |
          make -j$(nproc) || make -j1 V=s
          # 清理大文件，防止磁盘占满
          rm -rf build_dir/* staging_dir/* tmp/*
          find bin/ -type f -name "*.tar.gz" -size +1M -delete

      - name: Save ccache cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ github.event.inputs.openwrt_ref }}-${{ runner.os }}

      - name: Save dl cache
        uses: actions/cache@v4
        with:
          path: ${{ env.DL_DIR }}
          key: dl-${{ github.event.inputs.openwrt_ref }}-${{ runner.os }}

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: openwrt-${{ github.event.inputs.openwrt_ref || 'master' }}
          name: "OpenWrt build ${{ github.event.inputs.openwrt_ref || 'master' }}"
          files: ${{ env.WORKDIR }}/bin/targets/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
